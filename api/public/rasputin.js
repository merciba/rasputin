!function(){"use strict";var rasputin=angular.module("rasputin",["ngMessages","ui.router","ui.bootstrap","LocalStorageModule","ngOboe","ngAnimate"]);rasputin.config(["$locationProvider","localStorageServiceProvider","$urlRouterProvider","$stateProvider",function($locationProvider,localStorageServiceProvider,$urlRouterProvider,$stateProvider){$locationProvider.html5Mode(!0),$locationProvider.hashPrefix("!"),localStorageServiceProvider.setPrefix("rasputin"),$urlRouterProvider.otherwise("/");var getUser=["userService","$rootScope",function(userService,$rootScope){return userService.checkToken().then($rootScope.successHandler)}];$stateProvider.state("home",{url:"/",templateUrl:"templates/home.html",controller:"homeController as vm"}).state("login",{url:"/login",templateUrl:"templates/login.html",controller:"loginController as vm"}).state("signup",{url:"/signup",templateUrl:"templates/signup.html",controller:"signupController as vm"}).state("dashboard",{url:"/dashboard",templateUrl:"templates/dashboard.html",controller:"dashboardController as vm",resolve:{User:getUser}})}]).factory("_",function($window){return $window._}).run(["$rootScope",function($rootScope){$rootScope.successHandler=function(res){return res.data}}])}();
!function(){"use strict";angular.module("rasputin").controller("dashboardController",["$rootScope","$http","$q","_","$window","$state","$scope","transactionService","clientService","invoiceService","notificationService",function($rootScope,$http,$q,_,$window,$state,$scope,transactionService,clientService,invoiceService,notificationService){var vm=this;vm.plaidStatus=!1,vm.freshbooksStatus=!1,vm.transactions=[],vm.clients=[],vm.invoices=[],vm.accounts=[],vm.getAccountName=function(id){return _.find(vm.accounts,{_id:id}).meta.official_name},$("#bank-login").show(),$http.get("/api/dashboard").then($rootScope.successHandler,notificationService.httpRequestError).then(function(dashboard){vm.bankStatus=dashboard.plaidStatus,vm.freshBooksStatus=dashboard.freshBooksStatus;vm.bankStatus&&transactionService.getTransactions().then(function(results){vm.transactions=results.transactions,vm.accounts=results.accounts,$("#bank-login").hide()}),vm.freshBooksStatus&&(clientService.getClients().then(function(clients){vm.clients=clients}),invoiceService.getInvoices().then(function(invoices){vm.invoices=invoices}))},notificationService.httpRequestError)}])}();
!function(){"use strict";angular.module("rasputin").controller("homeController",["$window","$state","$scope",function($window,$state,$scope){}])}();
!function(){"use strict";angular.module("rasputin").controller("loginController",["$window","$state","$scope","userService","localStorageService","notificationService",function($window,$state,$scope,userService,localStorageService,notificationService){var vm=this;vm.loginForm={},vm.login=function(){userService.login(vm.loginForm).then(function(res){localStorageService.set("token",res.token),$state.go("dashboard")},notificationService.error)}}])}();
!function(){"use strict";angular.module("rasputin").controller("signupController",["$window","$state","$scope","userService","localStorageService","notificationService",function($window,$state,$scope,userService,localStorageService,notificationService){var vm=this;vm.signupForm={},vm.signup=function(){vm.signupForm.password===vm.signupForm.confirmPassword&&(delete vm.signupForm.confirmPassword,userService.signup(vm.signupForm).then(function(res){localStorageService.set("token",res.token),$state.go("dashboard")},notificationService.error))}}])}();
!function(){"use strict";angular.module("rasputin").factory("clientService",["$rootScope","$http","$window","localStorageService",function($rootScope,$http,$window,localStorageService){function getClients(){return $http.get("/api/client").then($rootScope.successHandler)}return{getClients:getClients}}])}();
!function(){"use strict";angular.module("rasputin").factory("invoiceService",["$rootScope","$http","$window","localStorageService",function($rootScope,$http,$window,localStorageService){function getInvoices(){return $http.get("/api/invoice").then($rootScope.successHandler)}return{getInvoices:getInvoices}}])}();
!function(){"use strict";angular.module("rasputin").factory("notificationService",["$rootScope","$http","$window","localStorageService",function($rootScope,$http,$window,localStorageService){return $window.toastr&&($window.toastr.options.preventDuplicates=!0),{success:$window.toastr.success,error:$window.toastr.error,httpRequestError:function(error){error.data?$window.toastr.error(error.data):error.message?$window.toastr.error(error.message):$window.toastr.error("Internal Server Error")}}}])}();
!function(){"use strict";angular.module("rasputin").factory("transactionService",["$rootScope","$http","$window","localStorageService",function($rootScope,$http,$window,localStorageService){var getTransactions=function(){return $http.get("/api/transaction").then($rootScope.successHandler)};return{getTransactions:getTransactions}}])}();
!function(){"use strict";angular.module("rasputin").factory("userService",["$rootScope","$http","$window","localStorageService",function($rootScope,$http,$window,localStorageService){var checkToken=function(){return $http.defaults.headers.common.Authorization=localStorageService.get("token"),$http.post("/api/token/authenticate").then($rootScope.successHandler)},signup=function(data){return $http.post("/api/signup",data).then($rootScope.successHandler)},login=function(data){return $http.post("/api/login",data).then($rootScope.successHandler)};return{checkToken:checkToken,signup:signup,login:login}}])}();
//# sourceMappingURL=data:application/json;base64,
